---
// ===== Styles
import "./Button.styles.css";

// ===== Types
import type { ButtonProps } from "./Button.types.ts";

// ===== Scripts
import { getButtonClassList } from "./Button.ts";

// ===== Props
const {
  as: Tag = "button",
  class: className,
  type = "button",
  disabled,
  shape,
  fill,
  size,
  colorPalette,
  iconOnly,
  loading,
  loadingText,
  loadingSpinner,
  spinnerPlacement = "start",
  ...props
}: ButtonProps = Astro.props;

const classList = getButtonClassList({ shape, fill, size, colorPalette, iconOnly });
---

<Tag class:list={[classList, className]} {type} data-loading={loading} disabled={disabled || loading} {...props}>
  {loading ?
    (<span class="loading-content">
      {spinnerPlacement === "start" && (
        loadingText ?
          (loadingSpinner ?? <span>[]</span>) :
          (<span class="spinner-wrapper">
            {loadingSpinner ?? <span>[]</span>}
          </span>)
      )}
      {loadingText ??
        <span class="text-wrapper">
          <slot />
        </span>}
      {spinnerPlacement === "end" && (
        loadingText ?
          (loadingSpinner ?? <span>[]</span>) :
          (<span class="spinner-wrapper">
            {loadingSpinner ?? <span>[]</span>}
          </span>)
      )}
    </span>) :
    <slot />}
</Tag>
